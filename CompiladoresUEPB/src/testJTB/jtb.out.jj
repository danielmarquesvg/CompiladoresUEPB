/* Generated by JTB 1.4.10 */
options
{
JDK_VERSION = "1.5";
  STATIC = false;
  VISITOR = true;
  VISITOR_DATA_TYPE = true;
}

PARSER_BEGIN(Analisador)
import syntaxtree.*;


public class Analisador {

  /* --- JTB generated return variables declarations --- */

  /** Return variable for the {@link #Start} BNFProduction */
  SimpleNode jtbrt_Start;

  /* --- User code --- */

  public static void main(String args[]) throws ParseException{}
}

class JTBToolkit {

  static NodeToken makeNodeToken(final Token t) {
    return new NodeToken(t.image.intern(), t.kind, t.beginLine, t.beginColumn, t.endLine, t.endColumn);
  }
}

PARSER_END(Analisador)

<WithinComment>
SKIP :
{
  "*/" : DEFAULT
}

<WithinComment>
MORE :
{
  < ~[] >
}

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
| "/*" : WithinComment
| < SINGLE_LINE_COMMENT : "//" ( ~["\n", "\r"] )* ( "\n"| "\r"| "\r\n" ) >
| < EOF_COMMENT : "//" ( ~["\n", "\r"] )* >
}

TOKEN :
{
  < MAIS : "+" >
| < MENOS : "-" >
| < ASTERISCO : "*" >
| < AND : "&&" >
| < MENOR : "<" >
| < NAO : "!" >
| < IGUAL : "=" >
| < ABRE_PARENTESES : "(" >
| < FECHA_PARENTESES : ")" >
| < ABRE_COLCHETE : "[" >
| < FECHA_COLCHETE : "]" >
| < ABRE_CHAVE : "{" >
| < FECHA_CHAVE : "}" >
| < PONTOVIRGULA : ";" >
| < PONTO : "." >
| < VIRGULA : "," >
| < CLASS : "class" >
| < STRING : "String" >
| < INT : "int" >
| < BOOLEAN : "boolean" >
| < THIS : "this" >
| < IF : "if" >
| < ELSE : "else" >
| < WHILE : "while" >
| < TRUE : "true" >
| < FALSE : "false" >
| < STATIC : "static" >
| < EXTENDS : "extends" >
| < RETURN : "return" >
| < PUBLIC : "public" >
| < VOID : "void" >
| < MAIN : "main" >
| < PRINT : "System.out.println" >
| < LENGTH : "length" >
| < NEW : "new" >
| < INT_LITERAL : ( <NUMERO> )+ >
| < IDENTIFIER : <LETRAS> ( <LETRAS>| <NUMERO> )* >
| < #LETRAS : ["a"-"z", "A"-"Z", "_"] >
| < #NUMERO : ["0"-"9"] >
}

/** Producao inicial. */
Start Start() :
{
  // --- JTB generated node declarations ---
  Goal n0 = null;
}
{
  n0 = Goal()
  {
    jtbrt_Start = jjtThis;
  }
  { return new Start(n0); }
}

Goal Goal() :
{
  // --- JTB generated node declarations ---
  MainClass n0 = null;
  NodeListOptional n1 = new NodeListOptional();
  ClassDeclaration n2 = null;
}
{
  n0 = MainClass()
  (
    n2 = ClassDeclaration()
    { n1.addNode(n2); }
  )*
  { n1.nodes.trimToSize(); }
  { return new Goal(n0, n1); }
}

MainClass MainClass() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
  NodeToken n12 = null;
  Token n13 = null;
  NodeToken n14 = null;
  Token n15 = null;
  NodeToken n16 = null;
  Token n17 = null;
  NodeToken n18 = null;
  Token n19 = null;
  NodeToken n20 = null;
  Token n21 = null;
  NodeToken n22 = null;
  Token n23 = null;
  NodeToken n24 = null;
  Token n25 = null;
  NodeToken n26 = null;
  Token n27 = null;
  Statement n28 = null;
  NodeToken n29 = null;
  Token n30 = null;
  NodeToken n31 = null;
  Token n32 = null;
}
{
  < CLASS >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  < IDENTIFIER >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  < ABRE_CHAVE >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  < PUBLIC >
  { n6 = JTBToolkit.makeNodeToken(n7); }
  < STATIC >
  { n8 = JTBToolkit.makeNodeToken(n9); }
  < VOID >
  { n10 = JTBToolkit.makeNodeToken(n11); }
  < MAIN >
  { n12 = JTBToolkit.makeNodeToken(n13); }
  < ABRE_PARENTESES >
  { n14 = JTBToolkit.makeNodeToken(n15); }
  < STRING >
  { n16 = JTBToolkit.makeNodeToken(n17); }
  < ABRE_COLCHETE >
  { n18 = JTBToolkit.makeNodeToken(n19); }
  < FECHA_COLCHETE >
  { n20 = JTBToolkit.makeNodeToken(n21); }
  < IDENTIFIER >
  { n22 = JTBToolkit.makeNodeToken(n23); }
  < FECHA_PARENTESES >
  { n24 = JTBToolkit.makeNodeToken(n25); }
  < ABRE_CHAVE >
  { n26 = JTBToolkit.makeNodeToken(n27); }
  n28 = Statement()
  < FECHA_CHAVE >
  { n29 = JTBToolkit.makeNodeToken(n30); }
  < FECHA_CHAVE >
  { n31 = JTBToolkit.makeNodeToken(n32); }
  { return new MainClass(n0, n2, n4, n6, n8, n10, n12, n14, n16, n18, n20, n22, n24, n26, n28, n29, n31); }
}

ClassDeclaration ClassDeclaration() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeOptional n4 = new NodeOptional();
  NodeSequence n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
  NodeListOptional n12 = new NodeListOptional();
  VarDeclaration n13 = null;
  NodeListOptional n14 = new NodeListOptional();
  MethodDeclaration n15 = null;
  NodeToken n16 = null;
  Token n17 = null;
}
{
  < CLASS >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  < IDENTIFIER >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    { n5 = new NodeSequence(2); }
    < EXTENDS >
    { n6 = JTBToolkit.makeNodeToken(n7); }
    { n5.addNode(n6); }
    < IDENTIFIER >
    { n8 = JTBToolkit.makeNodeToken(n9); }
    { n5.addNode(n8); }
    { n4.addNode(n5); }
  )?
  < ABRE_CHAVE >
  { n10 = JTBToolkit.makeNodeToken(n11); }
  (
    n13 = VarDeclaration()
    { n12.addNode(n13); }
  )*
  { n12.nodes.trimToSize(); }
  (
    n15 = MethodDeclaration()
    { n14.addNode(n15); }
  )*
  { n14.nodes.trimToSize(); }
  < FECHA_CHAVE >
  { n16 = JTBToolkit.makeNodeToken(n17); }
  { return new ClassDeclaration(n0, n2, n4, n10, n12, n14, n16); }
}

VarDeclaration VarDeclaration() :
{
  // --- JTB generated node declarations ---
  Type n0 = null;
  NodeToken n1 = null;
  Token n2 = null;
  NodeToken n3 = null;
  Token n4 = null;
}
{
  n0 = Type()
  < IDENTIFIER >
  { n1 = JTBToolkit.makeNodeToken(n2); }
  < PONTOVIRGULA >
  { n3 = JTBToolkit.makeNodeToken(n4); }
  { return new VarDeclaration(n0, n1, n3); }
}

MethodDeclaration MethodDeclaration() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  Type n2 = null;
  NodeToken n3 = null;
  Token n4 = null;
  NodeToken n5 = null;
  Token n6 = null;
  NodeOptional n7 = new NodeOptional();
  NodeSequence n8 = null;
  Type n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
  NodeListOptional n12 = null;
  NodeSequence n13 = null;
  NodeToken n14 = null;
  Token n15 = null;
  Type n16 = null;
  NodeToken n17 = null;
  Token n18 = null;
  NodeToken n19 = null;
  Token n20 = null;
  NodeToken n21 = null;
  Token n22 = null;
  NodeListOptional n23 = new NodeListOptional();
  VarDeclaration n24 = null;
  NodeListOptional n25 = new NodeListOptional();
  Statement n26 = null;
  NodeToken n27 = null;
  Token n28 = null;
  Expression n29 = null;
  NodeToken n30 = null;
  Token n31 = null;
}
{
  < PUBLIC >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = Type()
  < IDENTIFIER >
  { n3 = JTBToolkit.makeNodeToken(n4); }
  < ABRE_PARENTESES >
  { n5 = JTBToolkit.makeNodeToken(n6); }
  (
    { n12 = new NodeListOptional(); }
    { n8 = new NodeSequence(3); }
    n9 = Type()
    { n8.addNode(n9); }
    < IDENTIFIER >
    { n10 = JTBToolkit.makeNodeToken(n11); }
    { n8.addNode(n10); }
    (
      { n13 = new NodeSequence(3); }
      < VIRGULA >
      { n14 = JTBToolkit.makeNodeToken(n15); }
      { n13.addNode(n14); }
      n16 = Type()
      { n13.addNode(n16); }
      < IDENTIFIER >
      { n17 = JTBToolkit.makeNodeToken(n18); }
      { n13.addNode(n17); }
      { n12.addNode(n13); }
    )*
    { n12.nodes.trimToSize(); }
    { n8.addNode(n12); }
    { n7.addNode(n8); }
  )?
  < FECHA_PARENTESES >
  { n19 = JTBToolkit.makeNodeToken(n20); }
  < ABRE_CHAVE >
  { n21 = JTBToolkit.makeNodeToken(n22); }
  (
    n24 = VarDeclaration()
    { n23.addNode(n24); }
  )*
  { n23.nodes.trimToSize(); }
  (
    n26 = Statement()
    { n25.addNode(n26); }
  )*
  { n25.nodes.trimToSize(); }
  < RETURN >
  { n27 = JTBToolkit.makeNodeToken(n28); }
  n29 = Expression()
  < PONTOVIRGULA >
  { n30 = JTBToolkit.makeNodeToken(n31); }
  { return new MethodDeclaration(n0, n2, n3, n5, n7, n19, n21, n23, n25, n27, n29, n30); }
}

Type Type() :
{
  // --- JTB generated node declarations ---
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeChoice n4 = null;
  NodeSequence n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
  NodeToken n12 = null;
  Token n13 = null;
}
{
  (
    { n1 = new NodeSequence(2); }
    < INT >
    { n2 = JTBToolkit.makeNodeToken(n3); }
    { n1.addNode(n2); }
    (
      (
        { n5 = new NodeSequence(2); }
        < ABRE_COLCHETE >
        { n6 = JTBToolkit.makeNodeToken(n7); }
        { n5.addNode(n6); }
        < FECHA_COLCHETE >
        { n8 = JTBToolkit.makeNodeToken(n9); }
        { n5.addNode(n8); }
        { n4 = new NodeChoice(n5, 0, 2); }
      |
        {}
        { n4 = new NodeChoice(n5, 1, 2); }
      )
          )
    { n1.addNode(n4); }
    { n0 = new NodeChoice(n1, 0, 3); }
  |
    < BOOLEAN >
    { n10 = JTBToolkit.makeNodeToken(n11); }
    { n0 = new NodeChoice(n10, 1, 3); }
  |
    < IDENTIFIER >
    { n12 = JTBToolkit.makeNodeToken(n13); }
    { n0 = new NodeChoice(n12, 2, 3); }
  )
  { return new Type(n0); }
}

Statement Statement() :
{
  // --- JTB generated node declarations ---
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeListOptional n4 = new NodeListOptional();
  Statement n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeSequence n8 = null;
  NodeToken n9 = null;
  Token n10 = null;
  NodeToken n11 = null;
  Token n12 = null;
  Expression n13 = null;
  NodeToken n14 = null;
  Token n15 = null;
  Statement n16 = null;
  NodeToken n17 = null;
  Token n18 = null;
  Statement n19 = null;
  NodeSequence n20 = null;
  NodeToken n21 = null;
  Token n22 = null;
  NodeToken n23 = null;
  Token n24 = null;
  Expression n25 = null;
  NodeToken n26 = null;
  Token n27 = null;
  Statement n28 = null;
  NodeSequence n29 = null;
  NodeToken n30 = null;
  Token n31 = null;
  NodeToken n32 = null;
  Token n33 = null;
  Expression n34 = null;
  NodeToken n35 = null;
  Token n36 = null;
  NodeToken n37 = null;
  Token n38 = null;
  NodeSequence n39 = null;
  NodeToken n40 = null;
  Token n41 = null;
  NodeChoice n42 = null;
  NodeSequence n43 = null;
  NodeToken n44 = null;
  Token n45 = null;
  Expression n46 = null;
  NodeToken n47 = null;
  Token n48 = null;
  NodeSequence n49 = null;
  NodeToken n50 = null;
  Token n51 = null;
  Expression n52 = null;
  NodeToken n53 = null;
  Token n54 = null;
  NodeToken n55 = null;
  Token n56 = null;
  Expression n57 = null;
  NodeToken n58 = null;
  Token n59 = null;
}
{
  (
    { n1 = new NodeSequence(3); }
    < ABRE_CHAVE >
    { n2 = JTBToolkit.makeNodeToken(n3); }
    { n1.addNode(n2); }
    (
      n5 = Statement()
      { n4.addNode(n5); }
    )*
    { n4.nodes.trimToSize(); }
    { n1.addNode(n4); }
    < FECHA_CHAVE >
    { n6 = JTBToolkit.makeNodeToken(n7); }
    { n1.addNode(n6); }
    { n0 = new NodeChoice(n1, 0, 5); }
  |
    { n8 = new NodeSequence(7); }
    < IF >
    { n9 = JTBToolkit.makeNodeToken(n10); }
    { n8.addNode(n9); }
    < ABRE_PARENTESES >
    { n11 = JTBToolkit.makeNodeToken(n12); }
    { n8.addNode(n11); }
    n13 = Expression()
    { n8.addNode(n13); }
    < FECHA_PARENTESES >
    { n14 = JTBToolkit.makeNodeToken(n15); }
    { n8.addNode(n14); }
    n16 = Statement()
    { n8.addNode(n16); }
    < ELSE >
    { n17 = JTBToolkit.makeNodeToken(n18); }
    { n8.addNode(n17); }
    n19 = Statement()
    { n8.addNode(n19); }
    { n0 = new NodeChoice(n8, 1, 5); }
  |
    { n20 = new NodeSequence(5); }
    < WHILE >
    { n21 = JTBToolkit.makeNodeToken(n22); }
    { n20.addNode(n21); }
    < ABRE_PARENTESES >
    { n23 = JTBToolkit.makeNodeToken(n24); }
    { n20.addNode(n23); }
    n25 = Expression()
    { n20.addNode(n25); }
    < FECHA_PARENTESES >
    { n26 = JTBToolkit.makeNodeToken(n27); }
    { n20.addNode(n26); }
    n28 = Statement()
    { n20.addNode(n28); }
    { n0 = new NodeChoice(n20, 2, 5); }
  |
    { n29 = new NodeSequence(5); }
    < PRINT >
    { n30 = JTBToolkit.makeNodeToken(n31); }
    { n29.addNode(n30); }
    < ABRE_PARENTESES >
    { n32 = JTBToolkit.makeNodeToken(n33); }
    { n29.addNode(n32); }
    n34 = Expression()
    { n29.addNode(n34); }
    < FECHA_PARENTESES >
    { n35 = JTBToolkit.makeNodeToken(n36); }
    { n29.addNode(n35); }
    < PONTOVIRGULA >
    { n37 = JTBToolkit.makeNodeToken(n38); }
    { n29.addNode(n37); }
    { n0 = new NodeChoice(n29, 3, 5); }
  |
    { n39 = new NodeSequence(2); }
    < IDENTIFIER >
    { n40 = JTBToolkit.makeNodeToken(n41); }
    { n39.addNode(n40); }
    (
      (
        { n43 = new NodeSequence(3); }
        < IGUAL >
        { n44 = JTBToolkit.makeNodeToken(n45); }
        { n43.addNode(n44); }
        n46 = Expression()
        { n43.addNode(n46); }
        < PONTOVIRGULA >
        { n47 = JTBToolkit.makeNodeToken(n48); }
        { n43.addNode(n47); }
        { n42 = new NodeChoice(n43, 0, 2); }
      |
        { n49 = new NodeSequence(6); }
        < ABRE_COLCHETE >
        { n50 = JTBToolkit.makeNodeToken(n51); }
        { n49.addNode(n50); }
        n52 = Expression()
        { n49.addNode(n52); }
        < FECHA_COLCHETE >
        { n53 = JTBToolkit.makeNodeToken(n54); }
        { n49.addNode(n53); }
        < IGUAL >
        { n55 = JTBToolkit.makeNodeToken(n56); }
        { n49.addNode(n55); }
        n57 = Expression()
        { n49.addNode(n57); }
        < PONTOVIRGULA >
        { n58 = JTBToolkit.makeNodeToken(n59); }
        { n49.addNode(n58); }
        { n42 = new NodeChoice(n49, 1, 2); }
      )
          )
    { n39.addNode(n42); }
    { n0 = new NodeChoice(n39, 4, 5); }
  )
  { return new Statement(n0); }
}

Elinha Elinha() :
{
  // --- JTB generated node declarations ---
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  NodeChoice n2 = null;
  NodeToken n3 = null;
  Token n4 = null;
  NodeToken n5 = null;
  Token n6 = null;
  NodeToken n7 = null;
  Token n8 = null;
  NodeToken n9 = null;
  Token n10 = null;
  NodeToken n11 = null;
  Token n12 = null;
  Expression n13 = null;
  NodeSequence n14 = null;
  NodeToken n15 = null;
  Token n16 = null;
  Expression n17 = null;
  NodeToken n18 = null;
  Token n19 = null;
  NodeSequence n20 = null;
  NodeToken n21 = null;
  Token n22 = null;
  NodeChoice n23 = null;
  NodeToken n24 = null;
  Token n25 = null;
  NodeSequence n26 = null;
  NodeToken n27 = null;
  Token n28 = null;
  NodeToken n29 = null;
  Token n30 = null;
  NodeOptional n31 = new NodeOptional();
  NodeSequence n32 = null;
  Expression n33 = null;
  NodeListOptional n34 = null;
  NodeSequence n35 = null;
  NodeToken n36 = null;
  Token n37 = null;
  Expression n38 = null;
  NodeToken n39 = null;
  Token n40 = null;
}
{
  (
    { n1 = new NodeSequence(2); }
    (
      (
        < AND >
        { n3 = JTBToolkit.makeNodeToken(n4); }
        { n2 = new NodeChoice(n3, 0, 5); }
      |
        < MENOR >
        { n5 = JTBToolkit.makeNodeToken(n6); }
        { n2 = new NodeChoice(n5, 1, 5); }
      |
        < MAIS >
        { n7 = JTBToolkit.makeNodeToken(n8); }
        { n2 = new NodeChoice(n7, 2, 5); }
      |
        < MENOS >
        { n9 = JTBToolkit.makeNodeToken(n10); }
        { n2 = new NodeChoice(n9, 3, 5); }
      |
        < ASTERISCO >
        { n11 = JTBToolkit.makeNodeToken(n12); }
        { n2 = new NodeChoice(n11, 4, 5); }
      )
          )
    { n1.addNode(n2); }
    n13 = Expression()
    { n1.addNode(n13); }
    { n0 = new NodeChoice(n1, 0, 4); }
  |
    { n14 = new NodeSequence(3); }
    < ABRE_COLCHETE >
    { n15 = JTBToolkit.makeNodeToken(n16); }
    { n14.addNode(n15); }
    n17 = Expression()
    { n14.addNode(n17); }
    < FECHA_COLCHETE >
    { n18 = JTBToolkit.makeNodeToken(n19); }
    { n14.addNode(n18); }
    { n0 = new NodeChoice(n14, 1, 4); }
  |
    { n20 = new NodeSequence(2); }
    < PONTO >
    { n21 = JTBToolkit.makeNodeToken(n22); }
    { n20.addNode(n21); }
    (
      (
        < LENGTH >
        { n24 = JTBToolkit.makeNodeToken(n25); }
        { n23 = new NodeChoice(n24, 0, 2); }
      |
        { n26 = new NodeSequence(4); }
        < IDENTIFIER >
        { n27 = JTBToolkit.makeNodeToken(n28); }
        { n26.addNode(n27); }
        < ABRE_PARENTESES >
        { n29 = JTBToolkit.makeNodeToken(n30); }
        { n26.addNode(n29); }
        (
          { n34 = new NodeListOptional(); }
          { n32 = new NodeSequence(2); }
          n33 = Expression()
          { n32.addNode(n33); }
          (
            { n35 = new NodeSequence(2); }
            < VIRGULA >
            { n36 = JTBToolkit.makeNodeToken(n37); }
            { n35.addNode(n36); }
            n38 = Expression()
            { n35.addNode(n38); }
            { n34.addNode(n35); }
          )*
          { n34.nodes.trimToSize(); }
          { n32.addNode(n34); }
          { n31.addNode(n32); }
        )?
        { n26.addNode(n31); }
        < FECHA_PARENTESES >
        { n39 = JTBToolkit.makeNodeToken(n40); }
        { n26.addNode(n39); }
        { n23 = new NodeChoice(n26, 1, 2); }
      )
          )
    { n20.addNode(n23); }
    { n0 = new NodeChoice(n20, 2, 4); }
  |
    {}
    { n0 = new NodeChoice(null, 3, 4); }
  )
  { return new Elinha(n0); }
}

// METODO COM GAMBIARRA
Expression Expression() :
{
  // --- JTB generated node declarations ---
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  Elinha n4 = null;
  NodeSequence n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  Elinha n8 = null;
  NodeSequence n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
  Elinha n12 = null;
  NodeSequence n13 = null;
  NodeToken n14 = null;
  Token n15 = null;
  Elinha n16 = null;
  NodeSequence n17 = null;
  NodeToken n18 = null;
  Token n19 = null;
  Elinha n20 = null;
  NodeSequence n21 = null;
  NodeToken n22 = null;
  Token n23 = null;
  NodeChoice n24 = null;
  NodeSequence n25 = null;
  NodeToken n26 = null;
  Token n27 = null;
  NodeToken n28 = null;
  Token n29 = null;
  Expression n30 = null;
  NodeToken n31 = null;
  Token n32 = null;
  Elinha n33 = null;
  NodeSequence n34 = null;
  NodeToken n35 = null;
  Token n36 = null;
  NodeToken n37 = null;
  Token n38 = null;
  NodeToken n39 = null;
  Token n40 = null;
  Elinha n41 = null;
  NodeSequence n42 = null;
  NodeToken n43 = null;
  Token n44 = null;
  Expression n45 = null;
  Elinha n46 = null;
  NodeSequence n47 = null;
  NodeToken n48 = null;
  Token n49 = null;
  Expression n50 = null;
  NodeToken n51 = null;
  Token n52 = null;
  Elinha n53 = null;
}
{
  (
    { n1 = new NodeSequence(2); }
    < INT_LITERAL >
    { n2 = JTBToolkit.makeNodeToken(n3); }
    { n1.addNode(n2); }
    n4 = Elinha()
    { n1.addNode(n4); }
    { n0 = new NodeChoice(n1, 0, 8); }
  |
    { n5 = new NodeSequence(2); }
    < TRUE >
    { n6 = JTBToolkit.makeNodeToken(n7); }
    { n5.addNode(n6); }
    n8 = Elinha()
    { n5.addNode(n8); }
    { n0 = new NodeChoice(n5, 1, 8); }
  |
    { n9 = new NodeSequence(2); }
    < FALSE >
    { n10 = JTBToolkit.makeNodeToken(n11); }
    { n9.addNode(n10); }
    n12 = Elinha()
    { n9.addNode(n12); }
    { n0 = new NodeChoice(n9, 2, 8); }
  |
    { n13 = new NodeSequence(2); }
    < IDENTIFIER >
    { n14 = JTBToolkit.makeNodeToken(n15); }
    { n13.addNode(n14); }
    n16 = Elinha()
    { n13.addNode(n16); }
    { n0 = new NodeChoice(n13, 3, 8); }
  |
    { n17 = new NodeSequence(2); }
    < THIS >
    { n18 = JTBToolkit.makeNodeToken(n19); }
    { n17.addNode(n18); }
    n20 = Elinha()
    { n17.addNode(n20); }
    { n0 = new NodeChoice(n17, 4, 8); }
  |
    { n21 = new NodeSequence(2); }
    < NEW >
    { n22 = JTBToolkit.makeNodeToken(n23); }
    { n21.addNode(n22); }
    (
      (
        { n25 = new NodeSequence(5); }
        < INT >
        { n26 = JTBToolkit.makeNodeToken(n27); }
        { n25.addNode(n26); }
        < ABRE_COLCHETE >
        { n28 = JTBToolkit.makeNodeToken(n29); }
        { n25.addNode(n28); }
        n30 = Expression()
        { n25.addNode(n30); }
        < FECHA_COLCHETE >
        { n31 = JTBToolkit.makeNodeToken(n32); }
        { n25.addNode(n31); }
        n33 = Elinha()
        { n25.addNode(n33); }
        { n24 = new NodeChoice(n25, 0, 2); }
      |
        { n34 = new NodeSequence(4); }
        < IDENTIFIER >
        { n35 = JTBToolkit.makeNodeToken(n36); }
        { n34.addNode(n35); }
        < ABRE_PARENTESES >
        { n37 = JTBToolkit.makeNodeToken(n38); }
        { n34.addNode(n37); }
        < FECHA_PARENTESES >
        { n39 = JTBToolkit.makeNodeToken(n40); }
        { n34.addNode(n39); }
        n41 = Elinha()
        { n34.addNode(n41); }
        { n24 = new NodeChoice(n34, 1, 2); }
      )
          )
    { n21.addNode(n24); }
    { n0 = new NodeChoice(n21, 5, 8); }
  |
    { n42 = new NodeSequence(3); }
    < NAO >
    { n43 = JTBToolkit.makeNodeToken(n44); }
    { n42.addNode(n43); }
    n45 = Expression()
    { n42.addNode(n45); }
    n46 = Elinha()
    { n42.addNode(n46); }
    { n0 = new NodeChoice(n42, 6, 8); }
  |
    { n47 = new NodeSequence(4); }
    < ABRE_PARENTESES >
    { n48 = JTBToolkit.makeNodeToken(n49); }
    { n47.addNode(n48); }
    n50 = Expression()
    { n47.addNode(n50); }
    < FECHA_PARENTESES >
    { n51 = JTBToolkit.makeNodeToken(n52); }
    { n47.addNode(n51); }
    n53 = Elinha()
    { n47.addNode(n53); }
    { n0 = new NodeChoice(n47, 7, 8); }
  )
  { return new Expression(n0); }
}
